#!/bin/sh
set -e

C8Y_URL=
RAN_MARKER=/etc/tedge/.bootstrapped

log() {
    echo "$@" >&2
}

create_cert() {
    name="$1"
    if tedge cert show >/dev/null 2>&1; then
        echo "tedge device certificate has already been created" >&2

        echo "If your device is still not connected, try uploading the cert using:" >&2
        echo ""  >&2
        echo "  tedge cert upload c8y --user <your_username>"  >&2
        echo ""  >&2
        return
    fi
    tedge cert create --device-id "$name"
}

configure_c8y() {
    if [ -n "$1" ]; then
        C8Y_URL="$1"
    else
        printf "Enter your Cumulocity IoT url:\n"
        read -r C8Y_URL

        if [ -z "$C8Y_URL" ]; then
            return
        fi

        # trim the http:// or https:// prefix
        C8Y_URL=$(echo "$C8Y_URL" | sed 's|^https*://||g')
        tedge config set c8y.url "$C8Y_URL"
    fi

    printf "Do you want to upload the Certificate to Cumulocity IoT? [Y/n]: "
    read -r UPLOAD_CERT
    case "${UPLOAD_CERT:-Y}" in
        Y|y|yes)
            ;;
        N|n|no)
            return
            ;;
    esac

    printf "Enter your Cumulocity IoT username (must have Tenant Manager Role):\n"
    read -r C8Y_USER

    if [ -n "$C8Y_USER" ]; then
        tedge cert upload c8y --user "$C8Y_USER"
    else
        echo "" >&2
    fi

    tedge connect c8y
}

set_hostname() {
    host_name="$1"
    if [ "$(cat /etc/hostname)" = "$host_name" ]; then
        echo "Host name is already set"
        return
    fi
    echo "$host_name" | tee /etc/hostname

    if ! hostnamectl set-hostname "$host_name"; then
        log "hostnamectl failed, falling back to writing to /etc/hostname"
        echo "$host_name" > /etc/hostname
    fi
    systemctl restart avahi-daemon --no-block 2>/dev/null ||:
}

set_etc_hosts() {
    # enable local network calls to reference current host name
    host_name="$1"
    cp /etc/hosts /tmp/hosts.new
    sed -i -E 's/^127.0.1.1.*/127.0.1.1\t'"$host_name"'/' /tmp/hosts.new
    log "Replacing /etc/hosts with updated file"
    cp -f /tmp/hosts.new /etc/hosts
    log "Successfully updated /etc/hosts"
}

if [ $# -gt 0 ]; then
    C8Y_URL="$1"
fi

# set hostname
DEVICE_ID=
attempt=0
while [ "$attempt" -lt 30 ]; do
    DEVICE_ID="$(tedge-identity ||:)"
    if [ -n "$DEVICE_ID" ]; then
        log "Found valid DEVICE_ID"
        break
    fi
    attempt=$((attempt + 1))
    log "Waiting for tedge-identity"
    sleep 5
done

create_cert "$DEVICE_ID"
set_hostname "$DEVICE_ID"

if [ -n "$C8Y_URL" ]; then
    configure_c8y "$C8Y_URL"
fi

# set device type
# FIXME: Work out a better way to get the device type, maybe extend tedge-identity to include device info, it could also
# be referenced from 80_firmware
if [ -f /usr/share/tedge-inventory/scripts.d/80_firmware ]; then
    DEVICE_TYPE=$(/usr/share/tedge-inventory/scripts.d/80_firmware | grep "name=" | cut -d= -f2 | tr -d '"' | xargs)
    if [ -n "$DEVICE_TYPE" ]; then
        log "Setting device.type to $DEVICE_TYPE"
        tedge config set device.type "$DEVICE_TYPE"
    else
        log "Using default device.type: $(tedge config get device.type)"
    fi
fi

set_etc_hosts "$DEVICE_ID"

touch "$RAN_MARKER"
